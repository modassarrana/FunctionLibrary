- name: delete all resources before deleting knative component 
  shell: "kubectl delete ksvc,configuration,route --all "
  ignore_errors: true

- name: delete knative & its dependencies
  shell: "kubectl delete -f https://github.com/knative/serving/releases/download/v{{knative_version}}/serving.yaml -f https://github.com/knative/eventing/releases/download/v{{knative_version}}/release.yaml  -f  https://github.com/knative/serving/releases/download/v{{knative_version}}/monitoring.yaml  -f https://github.com/knative/eventing-sources/releases/download/v{{knative_version}}/eventing-sources.yaml -f https://raw.githubusercontent.com/knative/serving/v{{knative_version}}/third_party/config/build/clusterrole.yaml"
  ignore_errors: true
  when: knative_version == "0.6.0"

- name: delete kantive & its depedencies if version is > 0.6
  shell: "kubectl delete  -f https://github.com/knative/serving/releases/download/v{{knative_version}}/serving.yaml -f https://github.com/knative/eventing/releases/download/v{{knative_version}}/release.yaml -f https://github.com/knative/serving/releases/download/v{{knative_version}}/monitoring.yaml"
  ignore_errors: true
  when: knative_version is version_compare('0.6.0','>')

- pause: 
    seconds: 15

- name: check all serving pods  are deleted
  shell: "kubectl get pods --namespace knative-serving | wc -l"
  register: serving
  until: serving.stdout == "0"
  retries: 2
  delay: 5

- name: check all eventing pods  are deleted
  shell: "kubectl get pods --namespace knative-eventing | wc -l"
  register: eventing
  until: eventing.stdout == "0"
  retries: 2
  delay: 3

- name: check all sources pods are deleted
  shell: "kubectl get pods --namespace knative-sources | wc -l"
  register: source
  until: source.stdout == "0"
  retries: 2
  delay: 3
  when: knative_version == "0.6.0"

- name: Check all monitoring pods are deleted
  shell: "kubectl get pods --namespace knative-monitoring | wc -l"
  register: monitoring
  until: monitoring.stdout == "0"
  retries: 8
  delay: 5
  ignore_errors: true

